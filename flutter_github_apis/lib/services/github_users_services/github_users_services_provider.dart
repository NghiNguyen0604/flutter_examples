import 'package:flutter_riverpod/flutter_riverpod.dart';
/*
 * Autogenerated header by File Header Comment extension - Donna Iwan
 * File:       github_users_services_provider.dart
 * Created on: Fri Jul 08 2022
 * Author:     Nguyen Huu Nghi
 *
 * Copyright (c) 2022 Nguyen Huu Nghi
 *
 * Description 
 */

import '../../model/github_user.dart';
import '../../utils/utilities.dart';
import '../network_services/network_services.dart';
import 'github_users_services_files.dart';

/// Provider github users services.
final githubUsersServicesProvider = Provider<GitHubUsersServicesController>(
  (ref) => throw ArgumentError(
    'This provider will be overrided when initializing the app.',
  ),
);

/// Provider user.
final githubUserProvider = Provider<GitHubUser>(
  (ref) => throw ArgumentError(
    'This provider will be overrided when navigate to new page.',
  ),
);

/// Get all users provider
final getAllUsersProvider =
    FutureProvider.autoDispose.family<List<GitHubUser>, bool>(
  (ref, forceRefresh) async {
    final networkStatus = await NetworkServices.checkConnectivity();
    return ref.watch(githubUsersServicesProvider).getAllUsersRecords(
          forceRefresh: forceRefresh,
          offline: !networkStatus,
        );
  },
  dependencies: [
    githubUsersServicesProvider,
  ],
);

/// Get user provider
final getUserProvider = FutureProvider.autoDispose.family<GitHubUser, bool>(
  (ref, forceRefresh) async {
    final networkStatus = await NetworkServices.checkConnectivity();
    final user = ref.watch(githubUserProvider);
    return (await ref.watch(githubUsersServicesProvider).getUserInfoRecords(
          user: user,
          forceRefresh: forceRefresh,
          offline: !networkStatus,
        ))!;
  },
  dependencies: [
    githubUsersServicesProvider,
    githubUserProvider,
  ],
);
