/*
 * Autogenerated header by File Header Comment extension - Donna Iwan
 * File:       github_users_services_local.dart
 * Created on: Fri Jul 08 2022
 * Author:     Nguyen Huu Nghi
 *
 * Copyright (c) 2022 Nguyen Huu Nghi
 *
 * Description : Stored data in local.
 */
import 'package:sembast/sembast.dart';

import '../../model/github_user.dart';
import '../local_storage_services/sembast_database.dart';
import 'github_users_services_files.dart';

class GitHubUsersServicesLocal extends GitHubUsersServices {
  GitHubUsersServicesLocal({
    required this.dataStore,
  });
  final SembastDataStore dataStore;
  final ref_ = StoreRef(SembastDataStore.usersStore);
  @override
  Future<List<GitHubUser>> getAllUsers() {
    // TODO: implement getAllUsers
    throw UnimplementedError();
  }

  @override
  Future<GitHubUser?> getUserInfo(String login) async {
    final GitHubUser? record = await ref_.record(login).get(dataStore.db);
    return record;
  }

  @override
  Future<List<GitHubUser>> getAllUsersRecords({bool forceRefresh = false}) {
    // No need to use in local.
    throw UnimplementedError();
  }

  @override
  Future<GitHubUser?> getUserInfoRecords({
    required GitHubUser user,
    bool forceRefresh = false,
  }) {
    // No need to use in local.

    throw UnimplementedError();
  }
}
